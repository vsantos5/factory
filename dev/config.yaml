workspaces:

  dev:

    alb:
      - name: []
        service: {}
      #ECS/EKS uses the private ALB to route traffic to the services.
      #IF deleted the ECS/EKS will not work.      
      # - name: private #Dont change the private ALB name, it is used on other modules.
      #   internal: true
      #   service:
      #     core:
      #       priority: 1
      #       health_check_path: /core/actuator/health
      #       health_check_interval: 300
      #       health_check_timeout: 120
      #       healthy_threshold_count: 3
      #       unhealthy_threshold_count: 3
      #     backoffice:
      #       priority: 2
      #       health_check_interval: 300
      #       health_check_timeout: 5
      #       healthy_threshold_count: 3
      #       unhealthy_threshold_count: 3
      #     pix:
      #       priority: 3

      - name: []
        service: {}
      #ECS/EKS uses the public ALB to route traffic to the services.
      #IF deleted the ECS/EKS will not work.
      # - name: public #Dont change the public ALB name, it is used on other modules.
      #   internal: false
      #   service:
      #     gateway:
      #       priority: 1
      #       health_check_path: /gateway/actuator/health
      #       health_check_interval: 300
      #       health_check_timeout: 120
      #       healthy_threshold_count: 3
      #       unhealthy_threshold_count: 3
    
    cloudfront:      
      - bkt_name: []
      #- bkt_name: teste    

    ecs:
      - cluster: []
        service: {}
      # - cluster: main
      #   service:
      #     core:
      #       cpu: 256
      #       memory: 512
      #       desired_count: 1
      #       autoscaling_max_capacity: 2
      #       environment: 
      #         - name: AWS_REGION
      #           value: sa-east-1
      #         - name: RABBIT_MQ_ENABLE_SSL
      #           value: true
      #         - name: SPRING_PROFILES_ACTIVE
      #           value: "${var.env}"
      #       secrets:
      #         - name: AWS_ACCESS_KEY
      #           valueFrom: service_aws_access_key_dev
      #         - name: AWS_SECRET_KEY
      #           valueFrom: service_aws_secret_key_dev
      #       mountPoints:
      #         - sourceVolume: certificates
      #           containerPath: /etc/certificates
      #     pix:
      #     backoffice:

    efs:
      - name: []
      # - name: certificates
      #   enable_backup: false
      #   enable_replication: false

    # Before to create the EKS clsuter, you need to uncomment the kubernets/ helm providers
    # This feature supports only one EKS cluster per workspace.
    # If you need to create more than one EKS cluster, you need to create a new workspace.
    eks:
      # - cluster: []
      - cluster: main
        cluster_version: 1.31
        instance_types: ["m6i.large", "m5.xlarge", "m5n.2xlarge", "m5zn.3xlarge"]
        capacity_type: SPOT # "SPOT" : "ON_DEMAND"
        min_cluster_size: 1
        max_cluster_size: 3
        desired_cluster_size: 1
        #enable_node_termination_handler: true
        enable_cluster_autoscaler: true
        enable_argocd: true
        enable_karpenter: true
        enable_kube_prometheus_stack: true
        enable_metrics_server: true
        enable_external_dns: true
        enable_cert_manager: true
        enable_ack_addons: false
    
    s3:
      #- bkt_name: []      
      - bkt_name: config

      - bkt_name: logs
        versioning: false      

      # - bkt_name: compliance-monitoring-evidences
      #   versioning: false
      #   cors_rule: [
      #     {
      #       allowed_methods: ["PUT", "GET"],
      #       allowed_origins: ["https://dev.backoffice.com"],
      #       allowed_headers: ["*"],
      #       expose_headers: []
      #     }
      #   ]

    ssm:
      - name: []
      # - name: REGION
      #   value: sa-east-1
      #   type: String
      #   description: AWS Region used by the application
      # - name: SPRING_PROFILES_ACTIVE
      #   value: "${var.env}"
      #   type: SecureString
      #   description: Spring profile active