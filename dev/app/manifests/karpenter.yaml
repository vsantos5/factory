# Before apply this file, it≈õ mandatory to update EC2NodeClass/ spec:/ role
# with the correct Karpenter IAM role for your cluster
# and the subnetSelectorTerms/securityGroupSelectorTerms with the correct tags.
### Add this IAM access on KarpenterController policy
# {
#     "Effect": "Allow",
#     "Action": [
#         "iam:PassRole"
#     ],
#     "Resource": "arn:aws:iam::255440316077:role/karpenter-*"
# },
# {
#     "Effect": "Allow",
#     "Action": "iam:AddRoleToInstanceProfile",
#     "Resource": "arn:aws:iam::255440316077:instance-profile/main-eks-cluster-dev-use2*"
# }
###
# kubectl logs -f -n kube-system -l app.kubernetes.io/name=karpenter -c controller
# kubectl get nodes -L karpenter.sh/registered
# kubectl scale deployment inflate --replicas 50
# kubectl get events -w --sort-by '.lastTimestamp'
# Register the nodes if needed
# kubectl label node <node-name> karpenter.sh/registered=true
# kubectl annotate node <node-name> karpenter.sh/capacity-type=spot
# Scale node groups using Karpenter
# aws eks update-nodegroup-config \
#   --cluster-name <cluster-name> \
#   --nodegroup-name <nodegroup-name> \
#   --scaling-config minSize=1,maxSize=5,desiredSize=4

---
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiSelectorTerms:
    - alias: bottlerocket@latest
  role: karpenter-eks-node-group-2025050914303867010000000b
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: main-eks-cluster-dev-use2
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: main-eks-cluster-dev-use2
  tags:
    karpenter.sh/discovery: main-eks-cluster-dev-use2
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      requirements:
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values: ["c", "m", "r"]
        - key: "karpenter.k8s.aws/instance-cpu"
          operator: In
          values: ["4", "8", "16", "32"]
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "karpenter.k8s.aws/instance-generation"
          operator: Gt
          values: ["2"]
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 30s